// J5c_53.java: SpinnerDemo3 (SayaçGösterisi3) örneði.

/* Öncekilerden farký: Herbir Ay/Yýl sayaç deðiþiminde o sayacýn
 * mevsimsel renginin de deðiþmesidir.
 * Gereken java dosyalarý:
 *   J5c_51x1.java=CyclingSpinnerListModel.java
 *   J5c_51x2.java=SpringUtilities.java
 */
import java.awt.Color;
import java.awt.Container;

import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.JSpinner;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JFormattedTextField;
import javax.swing.JComponent;
import javax.swing.BorderFactory;
import javax.swing.SpringLayout;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerListModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SpinnerDateModel;

import javax.swing.event.ChangeListener;
import javax.swing.event.ChangeEvent;

import java.util.Calendar;
import java.util.Date;
import java.text.DateFormatSymbols;

public class J5c_53 extends JPanel implements ChangeListener {
    protected Calendar takvim;
    protected JSpinner tarihSayacý;

    protected Color ÝLKBAHAR_RENGÝ = new Color (0, 204, 51); // Hafif mavimtrak yeþil...
    protected Color YAZ_RENGÝ = Color.RED; // Kýrmýzý...
    protected Color SONBAHAR_RENGÝ = new Color (255, 153, 0); // Açýk sarýmtrak kýrmýzý...
    protected Color KIÞ_RENGÝ = Color.CYAN; // Camgöbeði açýk mavisi...

    public J5c_53 (boolean ayYýlýEtkilesinMi) {// Kurucu...
        super (new SpringLayout());

        String[] sayaçAdlarý = {"Ay adý: ", "Yýl rakamý: ", "Ay/Yýl rakamý: "};
        int sayaçSayýsý = sayaçAdlarý.length;
        takvim = Calendar.getInstance();
        JFormattedTextField biçimliMetinSatýrý = null;

        // Ýlk (ay adlý) sayaç adý ve sayaç çiftini yaratýp pencereye ekleyelim...
        String[] ayAdlarý = ayAdlarýnýAl();
        SpinnerListModel ayAdýModeli = null;
        if (ayYýlýEtkilesinMi) // Ay->yýl baðlantýlý kendi modelimizi kullanacaðýz...
            ayAdýModeli = new J5c_51x1 (ayAdlarý);
        else // Ay->yýl baðlantýsýz standart modeli kullanacaðýz...
            ayAdýModeli = new SpinnerListModel (ayAdlarý);

        JSpinner sayaç = baþlýklýSayacýEkle (this, sayaçAdlarý[0], ayAdýModeli);
        // Sayacýn ay adýný saða hizalayalým...
        biçimliMetinSatýrý = sayaçMetniniAl (sayaç);
        if (biçimliMetinSatýrý != null ) {
            //biçimliMetinSatýrý.setColumns (8); // Ýhtiyacýmýzdan biraz fazla yer ayýralým...
            biçimliMetinSatýrý.setHorizontalAlignment (JTextField.RIGHT);
        } // if kararý sonu...
        biçimliMetinSatýrý.setBackground (new Color ( (int)(Math.random()*100+156), (int)(Math.random()*100+156), (int)(Math.random()*100+156) )); // Açýk renkler...
        biçimliMetinSatýrý.setForeground (new Color ( (int)(Math.random()*156), (int)(Math.random()*156), (int)(Math.random()*156) )); // Koyu renkler...

        // Ýkinci (yýl rakamlý) sayaç adý ve sayaç çiftini yaratýp pencereye ekleyelim...
        int þimdikiYýl = takvim.get (Calendar.YEAR);
        SpinnerModel yýlRakamýModeli = new SpinnerNumberModel (
                þimdikiYýl, // Baþlangýç deðeri...
                þimdikiYýl - 100, // Enküçük deðer...
                þimdikiYýl + 100, // Enbüyük deðer...
                1); // Artýþ deðeri...
        // Eðer devridaim yapýyorsak bu modeli ayAdýModeli'ne baðýntýlayalým...
        if (ayAdýModeli instanceof J5c_51x1) ((J5c_51x1)ayAdýModeli).setLinkedModel (yýlRakamýModeli);
        sayaç = baþlýklýSayacýEkle (this, sayaçAdlarý[1], yýlRakamýModeli);
        // 4 haneli yýl rakamýnýn binler ayracý olmamalý...
        sayaç.setEditor (new JSpinner.NumberEditor (sayaç, "#"));
        // Sayacýn yýl rakamýnýn saða hizalý olduðundan emin olalým...
        biçimliMetinSatýrý = sayaçMetniniAl (sayaç);
        if (biçimliMetinSatýrý != null ) {
            //biçimliMetinSatýrý.setColumns (8); // Ýhtiyacýmýzdan biraz fazla yer ayýralým...
            biçimliMetinSatýrý.setHorizontalAlignment (JTextField.RIGHT);
        } // if kararý sonu...
        biçimliMetinSatýrý.setBackground (new Color ( (int)(Math.random()*100+156), (int)(Math.random()*100+156), (int)(Math.random()*100+156) )); // Açýk renkler...
        biçimliMetinSatýrý.setForeground (new Color ( (int)(Math.random()*156), (int)(Math.random()*156), (int)(Math.random()*156) )); // Koyu renkler...

        // Üçüncü (ay/yýl rakamlý) sayaç adý ve sayaç çiftini yaratýp pencereye ekleyelim...
        Date þimdikiTarih = takvim.getTime();
        takvim.add (Calendar.YEAR, -100);
        Date enküçükTarih = takvim.getTime();
        takvim.add (Calendar.YEAR, 200);
        Date enbüyükTarih = takvim.getTime();
        SpinnerDateModel ayYýlRakamlýTarihModeli = new SpinnerDateModel (
                þimdikiTarih, // Baþlangýç tarihi...
                enküçükTarih, // -100 yýl...
                enbüyükTarih, // +100 yýl...
                Calendar.YEAR); // Yýl artýþý...
        tarihSayacý = sayaç = baþlýklýSayacýEkle (this, sayaçAdlarý[2], ayYýlRakamlýTarihModeli);
        sayaç.setEditor (new JSpinner.DateEditor (sayaç, "MM/yyyy"));
        // Ay/yýl rakamlarýný sayacýn biçimli metin satýrýnda saða yaslayalým...
        biçimliMetinSatýrý = sayaçMetniniAl (sayaç);
        if (biçimliMetinSatýrý != null ) {
            biçimliMetinSatýrý.setHorizontalAlignment (JTextField.RIGHT);
            biçimliMetinSatýrý.setBorder (BorderFactory.createEmptyBorder (1,1,1,3));
        } // if kararý sonu...
        sayaç.setBorder (BorderFactory.createLineBorder (Color.BLACK, 1));
        // Ay/yýl yazý rengini mevsimlere göre deðiþtirelim...
        mevsimRenginiKoy (ayYýlRakamlýTarihModeli.getDate());
        //biçimliMetinSatýrý.setBackground (new Color ( (int)(Math.random()*100+156), (int)(Math.random()*100+156), (int)(Math.random()*100+156) )); // Açýk renkler...

        // Sayaç deðiþikliðini dinleyelim...
        tarihSayacý.addChangeListener (this);

        // Pencere komponentlerini ýzgara formunda SpringLayout'la serimleyelim...
        J5c_51x2.kesifIzgaraYap (
                this, // Penceremiz...
                sayaçSayýsý, 2, // Satýr ve sütun sayýsý...
                10, 10, // Ýlk baþlýklý sayacýn penceredeki konumu...
                6, 10); // Komponenler arasý tampon (sol-sað, üst-alt)...

        setBackground (new Color ( (int)(Math.random()*156), (int)(Math.random()*156), (int)(Math.random()*156) )); // Koyu renkler...
    } // J5c_53(..) kurucusu sonu...

    // DateFormatSymbols()'un son endeks içeriði boþsa, o elemaný silelim...
    static protected String[] ayAdlarýnýAl() {
        String[] aylar = new DateFormatSymbols().getMonths();
        int sonEndeks = aylar.length - 1;

        if (aylar[sonEndeks] == null || aylar[sonEndeks].length() <= 0) {// Son endeks boþ ve silinmeli...
            String[] ayAdlarý = new String[sonEndeks];
            System.arraycopy (aylar, 0, ayAdlarý, 0, sonEndeks);
            return ayAdlarý;
        }else return aylar; // Son endeks boþ deðil, ay adý içeriyor; kalsýn...
    } // ayAdlarýnýAl() metodu sonu...

    static protected JSpinner baþlýklýSayacýEkle (Container kab, String baþlýk, SpinnerModel sayaçModeli) {
        JLabel etiket = new JLabel (baþlýk);
        kab.add (etiket);
        etiket.setForeground (Color.white);

        JSpinner sayaç = new JSpinner (sayaçModeli);
        etiket.setLabelFor (sayaç);
        kab.add (sayaç);

        return sayaç;
    } // baþlýklýSayacýEkle(..) metodu sonu...

    /* Editörü kullandýðý biçimli metin satýrý içeriðini veya
     * editör JSpinner.DefaultEditör soyundan deðilse null döndürür.*/
    public JFormattedTextField sayaçMetniniAl (JSpinner sayaç) {
        JComponent editör = sayaç.getEditor();
        if (editör instanceof JSpinner.DefaultEditor) return ((JSpinner.DefaultEditor)editör).getTextField();
        else {System.err.println ("Hatalý editör çeþidi: [" + sayaç.getEditor().getClass() + "] editörü JSpinner.DefaultEditor soyundan deðil!"); return null;}
    } // sayaçMetniniAl(..) metodu sonu...

    // Tip deðiþkenlerinde tanýmlanan kuzey yarýmküre geleneksel mevsim renklerini ay/yýl rakamlarýna koyar...
    protected void mevsimRenginiKoy (Date tarih) {
        takvim.setTime (tarih);
        int ayRakamý = takvim.get (Calendar.MONTH);
        JFormattedTextField biçimliMetinSatýrý = sayaçMetniniAl (tarihSayacý);
        if (biçimliMetinSatýrý == null) return;

        switch (ayRakamý) {
            case 2: 
            case 3:
            case 4: // Ýlkbahar (Mart, Nisan, Mayýs)...
                     biçimliMetinSatýrý.setForeground (ÝLKBAHAR_RENGÝ);
                     break;
            case 5: case 6: case 7: // Yaz (Haziran, Temmuz, Aðustos)...
                     biçimliMetinSatýrý.setForeground (YAZ_RENGÝ);
                     break;
            case 8: case 9: case10: // Sonbahar (Eylül, Ekim, Kasým)...
                     biçimliMetinSatýrý.setForeground (SONBAHAR_RENGÝ);
                     break;
            default: // Kalan/Kýþ (Aralýk, Ocak, Þubat)...
                     biçimliMetinSatýrý.setForeground (KIÞ_RENGÝ);
        } // swith(..) karar bloðu sonu...
    } // mevsimRenginiKoy(..) metodu sonu...

    // Ay/yýl deðiþikliðini mevsim rengi kontrol switch bloðuna test ettirir...
    public void stateChanged (ChangeEvent olay) {
        SpinnerModel ayYýlRakamlýTarihModeli = tarihSayacý.getModel();
        if (ayYýlRakamlýTarihModeli instanceof SpinnerDateModel)
            mevsimRenginiKoy (((SpinnerDateModel)ayYýlRakamlýTarihModeli).getDate());
    } //stateChanged(..) hazýr metodu sonu...

    private static void yaratVeGösterGUI() {
        JFrame çerçeve = new JFrame ("Sayaç Gösterisi 3");
        çerçeve.setDefaultCloseOperation (3); // 3=JFrame.EXIT_ON_CLOSE
        çerçeve.add (new J5c_53 (true)); // "ayYýlýEtkilesinMi=true" ile kurucuyu çaðýr...
        çerçeve.setLocation (550,100);
        çerçeve.pack();
        çerçeve.setVisible (true);
    } // yaratVeGösterGUI() metodu sonu...

    public static void main (String[] args) {
        SwingUtilities.invokeLater (new Runnable() {
            public void run() {
                // Koyu yazý fonlu metal kullanýmý kapatýlýyor...
                UIManager.put ("swing.boldMetal", Boolean.FALSE);
                yaratVeGösterGUI();
        }}); // jav.. ifadesi sonu...
    } // main(..) metodu sonu...
} // J5c_53 sýnýfý sonu...